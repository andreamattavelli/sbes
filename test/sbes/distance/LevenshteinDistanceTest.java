/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 12 07:57:13 CET 2015
 */

package sbes.distance;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import org.junit.Test;
 
public class LevenshteinDistanceTest {

  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I47 Branch 4 IFNE L28 - true
   * 2 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I84 Branch 5 IF_ICMPLE L39 - true
   * 3 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I84 Branch 5 IF_ICMPLE L39 - false
   * 4 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I119 Branch 6 IF_ICMPNE L48 - true
   * 5 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I119 Branch 6 IF_ICMPNE L48 - false
   * 6 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I158 Branch 7 IF_ICMPLE L47 - true
   * 7 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I158 Branch 7 IF_ICMPLE L47 - false
   * 8 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I177 Branch 8 IF_ICMPLE L43 - true
   * 9 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I177 Branch 8 IF_ICMPLE L43 - false
   */

  @Test
  public void test0()  throws Throwable  {
      int int0 = LevenshteinDistance.calculateDistance("Jd!:=-l0m", "Jd!:=-l0m");
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I39 Branch 3 IFNE L26 - false
   */

  @Test
  public void test1()  throws Throwable  {
      int int0 = LevenshteinDistance.calculateDistance("", "*A.d'hZ)A2");
      assertEquals(10, int0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I5 Branch 2 IFNONNULL L19 - false
   */

  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        LevenshteinDistance.calculateDistance("Strings must not be null", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Strings must not be null
         //
      }
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I3 Branch 1 IFNULL L19 - false
   * 2 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I5 Branch 2 IFNONNULL L19 - true
   * 3 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I39 Branch 3 IFNE L26 - true
   * 4 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I47 Branch 4 IFNE L28 - false
   */

  @Test
  public void test3()  throws Throwable  {
      int int0 = LevenshteinDistance.calculateDistance("=^INqI", "");
      assertEquals(6, int0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 sbes.distance.LevenshteinDistance.calculateDistance(Ljava/lang/String;Ljava/lang/String;)I: I3 Branch 1 IFNULL L19 - true
   */

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        LevenshteinDistance.calculateDistance((String) null, (String) null);
        fail("Expecting exception: MockIllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Strings must not be null
         //
      }
  }

}
